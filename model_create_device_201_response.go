/*
usermng

usermng api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package usermngclientgo

import (
	"encoding/json"
)

// checks if the CreateDevice201Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateDevice201Response{}

// CreateDevice201Response struct for CreateDevice201Response
type CreateDevice201Response struct {
	Id *string `json:"id,omitempty"`
	Token *string `json:"token,omitempty"`
	Password *string `json:"password,omitempty"`
}

// NewCreateDevice201Response instantiates a new CreateDevice201Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDevice201Response() *CreateDevice201Response {
	this := CreateDevice201Response{}
	return &this
}

// NewCreateDevice201ResponseWithDefaults instantiates a new CreateDevice201Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDevice201ResponseWithDefaults() *CreateDevice201Response {
	this := CreateDevice201Response{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CreateDevice201Response) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDevice201Response) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CreateDevice201Response) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CreateDevice201Response) SetId(v string) {
	o.Id = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *CreateDevice201Response) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDevice201Response) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *CreateDevice201Response) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *CreateDevice201Response) SetToken(v string) {
	o.Token = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *CreateDevice201Response) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDevice201Response) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *CreateDevice201Response) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *CreateDevice201Response) SetPassword(v string) {
	o.Password = &v
}

func (o CreateDevice201Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateDevice201Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	return toSerialize, nil
}

type NullableCreateDevice201Response struct {
	value *CreateDevice201Response
	isSet bool
}

func (v NullableCreateDevice201Response) Get() *CreateDevice201Response {
	return v.value
}

func (v *NullableCreateDevice201Response) Set(val *CreateDevice201Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDevice201Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDevice201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDevice201Response(val *CreateDevice201Response) *NullableCreateDevice201Response {
	return &NullableCreateDevice201Response{value: val, isSet: true}
}

func (v NullableCreateDevice201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDevice201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


